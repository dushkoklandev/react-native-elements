(self.webpackChunk=self.webpackChunk||[]).push([[172],{54236:(t,e,n)=>{"use strict";n.d(e,{Z:()=>k});var a=n(87462),l=n(67294),r=n(91262),i=n(18421),o=n(77356),d=n(41652),m=n(24309),p=n(16042),u=n(20346),s=n(30650);const k=function(t){var e=t.params,n=t.containerStyle,k=void 0===n?{}:n;return l.createElement(r.Z,{fallback:l.createElement(l.Fragment,null,"Loading...")},(function(){return l.createElement(u.X9.Provider,null,l.createElement(u.PK,{initialMetrics:s.o},l.createElement("div",{style:Object.assign({border:"1px solid var(--ifm-color-emphasis-200)",borderRadius:"var(--ifm-global-radius)",position:"relative"},k)},l.createElement(i.Z,(0,a.Z)({},e.compilerProps,{minHeight:62,placeholder:o.Z}))),l.createElement(d.Z,{msg:e.errorProps.msg,isPopup:!0}),l.createElement(m.Z,e.knobProps),l.createElement(d.Z,e.errorProps),l.createElement(p.E,e.actions)))}))}},7213:(t,e,n)=>{"use strict";n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>g,default:()=>y,frontMatter:()=>k,metadata:()=>N,toc:()=>c});var a=n(87462),l=n(63366),r=n(67294),i=n(3905),o=(n(9877),n(72360),n(19617)),d=n(54236),m=n(40318),p=n(62290);const u=function(){var t=(0,m.Z)({componentName:"Slider",props:{animateTransitions:{value:!0,type:p.n.Boolean},animationConfig:{valie:"{}",type:p.n.Object},animationType:{value:"timing",options:{timing:"timing",spring:"spring"},type:p.n.Enum,description:"Defines the Animation type."},debugTouchArea:{type:p.n.Boolean,value:!1,description:"Set this to true to visually see the thumb touch rect in green."},disabled:{type:p.n.Boolean,value:!1,description:"Disables the slider"},maximumTrackTintColor:{type:p.n.String,value:"#ccc"},maximumValue:{value:100,type:p.n.Number},minimumTrackTintColor:{type:p.n.String,value:"#222"},minimumValue:{value:0,type:p.n.Number},allowTouchTrack:{type:p.n.Boolean,value:!1,description:"If true, thumb will respond and jump to any touch along the track."},onSlidingComplete:{type:p.n.Function,value:'() => console.log("onSlidingComplete()")'},onSlidingStart:{type:p.n.Function,value:'() => console.log("onSlidingStart()")'},onValueChange:{type:p.n.Function,value:'(value) => console.log("onValueChange()",value)'},orientation:{value:"horizontal",options:{horizontal:"horizontal",vertical:"vertical"},type:p.n.Enum,description:"Slider's Orientation"},step:{value:1,type:p.n.Number},style:{value:'{width:"80%",height:200}',type:p.n.Object},thumbStyle:{value:"{ height: 20, width: 20 }",type:p.n.Object},thumbProps:{value:'{\n          children: (\n            <Icon\n              name="heartbeat"\n              type="font-awesome"\n              size={20}\n              reverse\n              containerStyle={{ bottom: 20, right: 20 }}\n              color="#f50"\n            />\n          ),\n        }',type:p.n.Object},thumbTintColor:{type:p.n.String,value:"#0c0"},thumbTouchSize:{type:p.n.Object,value:"{width: 40, height: 40}"},trackStyle:{value:"{ height: 10,borderRadius:20 }",type:p.n.Object},value:{value:50,type:p.n.Number}},scope:{Slider:o.Slider,Icon:o.Icon},imports:{"@rneui/base":{named:["Slider","Icon"]}}});return r.createElement(r.Fragment,null,r.createElement(d.Z,{params:t}))};var s=["components"],k={id:"slider",title:"Slider"},g=void 0,N={unversionedId:"components/slider",id:"components/slider",title:"Slider",description:"Sliders allow users to select a value from a fixed set of values using drag utility.",source:"@site/docs/components/Slider.mdx",sourceDirName:"components",slug:"/components/slider",permalink:"/docs/next/components/slider",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/docs/components/Slider.mdx",tags:[],version:"current",frontMatter:{id:"slider",title:"Slider"},sidebar:"docs",previous:{title:"SearchBar",permalink:"/docs/next/components/searchbar"},next:{title:"Skeleton",permalink:"/docs/next/components/skeleton"}},h={},c=[{value:"Import",id:"import",level:2},{value:"Props",id:"props",level:2},{value:"Playground",id:"playground",level:2}],b={toc:c};function y(t){var e=t.components,n=(0,l.Z)(t,s);return(0,i.kt)("wrapper",(0,a.Z)({},b,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sliders allow users to select a value from a fixed set of values using drag utility."),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Slider } from "@rneui/themed";\n')),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("div",{class:"table-responsive"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"allowTouchTrack")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"If true, thumb will respond and jump to any touch along the track.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animateTransitions")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Set to true if you want to use the default 'spring' animation.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animationConfig")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"TimingAnimationConfig")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"SpringAnimationConfig")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Used to configure the animation parameters. These are the same parameters in the ",(0,i.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/animations.html"},"Animated library"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"animationType")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"spring")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"timing")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"timing")),(0,i.kt)("td",{parentName:"tr",align:null},"Set to 'spring' or 'timing' to use one of those two types of animations with the default ",(0,i.kt)("a",{parentName:"td",href:"https://reactnative.dev/docs/animations.html"},"animation properties"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"containerStyle")),(0,i.kt)("td",{parentName:"tr",align:null},"Style"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Apply style to the container of the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"debugTouchArea")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},"Set this to true to visually see the thumb touch rect in green.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"disabled")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"If true the user won't be able to move the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maximumTrackTintColor")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"#b3b3b3")),(0,i.kt)("td",{parentName:"tr",align:null},"The color used for the track to the right of the button.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"maximumValue")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"1")),(0,i.kt)("td",{parentName:"tr",align:null},"Initial maximum value of the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"minimumTrackTintColor")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"#3f3f3f")),(0,i.kt)("td",{parentName:"tr",align:null},"The color used for the track to the left of the button.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"minimumValue")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:null},"Initial minimum value of the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onSlidingComplete")),(0,i.kt)("td",{parentName:"tr",align:null},"(value: number) => void"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Callback called when the user finishes changing the value (e.g. when the slider is released).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onSlidingStart")),(0,i.kt)("td",{parentName:"tr",align:null},"(value: number) => void"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Callback called when the user starts changing the value (e.g. when the slider is pressed).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onValueChange")),(0,i.kt)("td",{parentName:"tr",align:null},"(value: number) => void"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Callback continuously called while the user is dragging the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"orientation")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"vertical")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"horizontal")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"horizontal")),(0,i.kt)("td",{parentName:"tr",align:null},"Set the orientation of the slider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"step")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:null},"Step value of the slider. The value should be between 0 and maximumValue - minimumValue).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"style")),(0,i.kt)("td",{parentName:"tr",align:null},"View Style"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The style applied to the slider container.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"thumbProps")),(0,i.kt)("td",{parentName:"tr",align:null},"any"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The props applied to the thumb. Uses ",(0,i.kt)("inlineCode",{parentName:"td"},"Component")," prop which can accept ",(0,i.kt)("inlineCode",{parentName:"td"},"Animated")," components.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"thumbStyle")),(0,i.kt)("td",{parentName:"tr",align:null},"View Style"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The style applied to the thumb.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"thumbTintColor")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"red")),(0,i.kt)("td",{parentName:"tr",align:null},"The color used for the thumb.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"thumbTouchSize")),(0,i.kt)("td",{parentName:"tr",align:null},"Sizable"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{ width: THUMB_SIZE, height: THUMB_SIZE }")),(0,i.kt)("td",{parentName:"tr",align:null},"The size of the touch area that allows moving the thumb. The touch area has the same center as the visible thumb. This allows to have a visually small thumb while still allowing the user to move it easily.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"trackStyle")),(0,i.kt)("td",{parentName:"tr",align:null},"View Style"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The style applied to the track.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:null},"Initial value of the slider."))))),(0,i.kt)("h2",{id:"playground"},"Playground"),(0,i.kt)(u,{mdxType:"Play"}))}y.isMDXComponent=!0},33770:()=>{},72950:()=>{},54882:()=>{}}]);