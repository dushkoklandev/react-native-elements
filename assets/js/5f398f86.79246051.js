"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6033],{58215:(e,r,t)=>{t.d(r,{Z:()=>n});var a=t(67294);const n=function(e){var r=e.children,t=e.hidden,n=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:n},r)}},82895:(e,r,t)=>{t.d(r,{Z:()=>m});var a=t(87462),n=t(67294),s=t(72389),i=t(79443);const o=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var l=t(15779),u=t(86010);const c="tabItem_vU9c";function d(e){var r,t,s,i=e.lazy,d=e.block,m=e.defaultValue,p=e.values,g=e.groupId,v=e.className,f=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),D=null!=p?p:f.map((function(e){var r=e.props;return{value:r.value,label:r.label,attributes:r.attributes}})),A=(0,l.lx)(D,(function(e,r){return e.value===r.value}));if(A.length>0)throw new Error('Docusaurus error: Duplicate values "'+A.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===m?m:null!=(r=null!=m?m:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?r:null==(s=f[0])?void 0:s.props.value;if(null!==h&&!D.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+D.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=o(),k=b.tabGroupChoices,B=b.setTabGroupChoices,P=(0,n.useState)(h),L=P[0],x=P[1],E=[],w=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var C=k[g];null!=C&&C!==L&&D.some((function(e){return e.value===C}))&&x(C)}var y=function(e){var r=e.currentTarget,t=E.indexOf(r),a=D[t].value;a!==L&&(w(r),x(a),null!=g&&B(g,a))},T=function(e){var r,t=null;switch(e.key){case"ArrowRight":var a=E.indexOf(e.currentTarget)+1;t=E[a]||E[0];break;case"ArrowLeft":var n=E.indexOf(e.currentTarget)-1;t=E[n]||E[E.length-1]}null==(r=t)||r.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":d},v)},D.map((function(e){var r=e.value,t=e.label,s=e.attributes;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:L===r?0:-1,"aria-selected":L===r,key:r,ref:function(e){return E.push(e)},onKeyDown:T,onFocus:y,onClick:y},s,{className:(0,u.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":L===r})}),null!=t?t:r)}))),i?(0,n.cloneElement)(f.filter((function(e){return e.props.value===L}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},f.map((function(e,r){return(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==L})}))))}function m(e){var r=(0,s.Z)();return n.createElement(d,(0,a.Z)({key:String(r)},e))}},18315:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>l,contentTitle:()=>u,metadata:()=>c,toc:()=>d,default:()=>p});var a=t(87462),n=t(63366),s=(t(67294),t(3905)),i=t(17940),o=(t(34738),t(82895),t(58215),["components"]),l={id:"linearprogress",title:"LinearProgress",slug:"/linearprogress"},u=void 0,c={unversionedId:"main/linearprogress",id:"main/linearprogress",title:"LinearProgress",description:"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates.",source:"@site/docs/main/LinearProgress.mdx",sourceDirName:"main",slug:"/linearprogress",permalink:"/docs/next/linearprogress",editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/docs/main/LinearProgress.mdx",tags:[],version:"current",frontMatter:{id:"linearprogress",title:"LinearProgress",slug:"/linearprogress"},sidebar:"docs",previous:{title:"Input",permalink:"/docs/next/input"},next:{title:"ListItem",permalink:"/docs/next/listitem"}},d=[{value:"Usage",id:"usage",children:[],level:2},{value:"Props",id:"props",children:[{value:"LinearProgress",id:"linearprogress",children:[],level:3}],level:2},{value:"Reference",id:"reference",children:[{value:"LinearProgress",id:"linearprogress-1",children:[],level:3}],level:2}],m={toc:d};function p(e){var r=e.components,t=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Progress indicators inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates."),(0,s.kt)("p",null,"They communicate an app\u2019s state and indicate available actions, such as whether users can navigate away from the current screen."),(0,s.kt)("p",null,"Also receives all ",(0,s.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/view#props"},"View")," props"),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)(i.default,{mdxType:"Usage"}),(0,s.kt)("h2",{id:"props"},"Props"),(0,s.kt)("h3",{id:"linearprogress"},"LinearProgress"),(0,s.kt)("h2",{id:"reference"},"Reference"),(0,s.kt)("h3",{id:"linearprogress-1"},"LinearProgress"))}p.isMDXComponent=!0},17940:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>l,contentTitle:()=>u,metadata:()=>c,toc:()=>d,default:()=>p});var a=t(87462),n=t(63366),s=(t(67294),t(3905)),i=t(34384),o=["components"],l={},u=void 0,c={unversionedId:"main/usage/LinearProgress/LinearProgress",id:"main/usage/LinearProgress/LinearProgress",title:"LinearProgress",description:"",source:"@site/docs/main/usage/LinearProgress/LinearProgress.mdx",sourceDirName:"main/usage/LinearProgress",slug:"/main/usage/LinearProgress/",permalink:"/docs/next/main/usage/LinearProgress/",editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/docs/main/usage/LinearProgress/LinearProgress.mdx",tags:[],version:"current",frontMatter:{}},d=[],m={toc:d};function p(e){var r=e.components,t=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)(i.default,{mdxType:"Snack"}))}p.isMDXComponent=!0},34384:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>o,contentTitle:()=>l,metadata:()=>u,toc:()=>c,default:()=>m});var a=t(87462),n=t(63366),s=(t(67294),t(3905)),i=["components"],o={},l=void 0,u={unversionedId:"main/usage/LinearProgress/snack/index",id:"main/usage/LinearProgress/snack/index",title:"index",description:"",source:"@site/docs/main/usage/LinearProgress/snack/index.md",sourceDirName:"main/usage/LinearProgress/snack",slug:"/main/usage/LinearProgress/snack/",permalink:"/docs/next/main/usage/LinearProgress/snack/",editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/docs/main/usage/LinearProgress/snack/index.md",tags:[],version:"current",frontMatter:{}},c=[],d={toc:c};function m(e){var r=e.components,t=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"snack-player","data-snack-name":"RNE Linear Progress","data-snack-description":"Example usage","data-snack-code":"import%20React%20from%20'react'%3B%0Aimport%20%7B%20View%2C%20Text%20%7D%20from%20'react-native'%3B%0Aimport%20%7B%20Button%2C%20LinearProgress%20%7D%20from%20'react-native-elements'%3B%0A%0Aconst%20LinearProgressAPI%3A%20React.FunctionComponent%20%3D%20()%20%3D%3E%20%7B%0A%20%20const%20%5Bprogress%2C%20setProgress%5D%20%3D%20React.useState(0)%3B%0A%0A%20%20React.useEffect(()%20%3D%3E%20%7B%0A%20%20%20%20let%20subs%20%3D%20true%3B%0A%20%20%20%20if%20(progress%20%3C%201%20%26%26%20progress%20!%3D%3D%200)%20%7B%0A%20%20%20%20%20%20setTimeout(()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20if%20(subs)%20%7B%0A%20%20%20%20%20%20%20%20%20%20setProgress(progress%20%2B%200.1)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%2C%20100)%3B%0A%20%20%20%20%7D%0A%20%20%20%20return%20()%20%3D%3E%20%7B%0A%20%20%20%20%20%20subs%20%3D%20false%3B%0A%20%20%20%20%7D%3B%0A%20%20%7D%2C%20%5Bprogress%5D)%3B%0A%0A%20%20return%20(%0A%20%20%20%20%3CView%3E%0A%20%20%20%20%20%20%3CView%0A%20%20%20%20%20%20%20%20style%3D%7B%7B%0A%20%20%20%20%20%20%20%20%20%20margin%3A%2010%2C%0A%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%3E%0A%20%20%20%20%20%20%20%20%3CText%3EIndeterminate%20Variant%20%3C%2FText%3E%0A%20%20%20%20%20%20%20%20%3CLinearProgress%20style%3D%7B%7B%20marginVertical%3A%2010%20%7D%7D%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CText%3EIndeterminate%20Variant%20with%20color%3C%2FText%3E%0A%20%20%20%20%20%20%20%20%3CLinearProgress%20style%3D%7B%7B%20marginVertical%3A%2010%20%7D%7D%20color%3D%22red%22%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CText%3EDeterminate%20Variant%3C%2FText%3E%0A%20%20%20%20%20%20%20%20%3CLinearProgress%0A%20%20%20%20%20%20%20%20%20%20style%3D%7B%7B%20marginVertical%3A%2010%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20value%3D%7Bprogress%7D%0A%20%20%20%20%20%20%20%20%20%20variant%3D%22determinate%22%0A%20%20%20%20%20%20%20%20%2F%3E%0A%0A%20%20%20%20%20%20%20%20%3CButton%0A%20%20%20%20%20%20%20%20%20%20disabled%3D%7Bprogress%20%3E%200%7D%0A%20%20%20%20%20%20%20%20%20%20onPress%3D%7B()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20setProgress(0.00001)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20title%3D%7B'Start%20Progress'%7D%0A%20%20%20%20%20%20%20%20%20%20containerStyle%3D%7B%7B%20margin%3A%2010%20%7D%7D%0A%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%20%20%3CButton%0A%20%20%20%20%20%20%20%20%20%20disabled%3D%7Bprogress%20%3D%3D%3D%200%7D%0A%20%20%20%20%20%20%20%20%20%20onPress%3D%7B()%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20setProgress(0)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D%7D%0A%20%20%20%20%20%20%20%20%20%20title%3D%7B'Restart'%7D%0A%20%20%20%20%20%20%20%20%20%20containerStyle%3D%7B%7B%20margin%3A%2010%20%7D%7D%0A%20%20%20%20%20%20%20%20%2F%3E%0A%20%20%20%20%20%20%3C%2FView%3E%0A%20%20%20%20%3C%2FView%3E%0A%20%20)%3B%0A%7D%3B%0A%0Aexport%20default%20LinearProgressAPI%3B","data-snack-dependencies":"react-native-elements","data-snack-platform":"web","data-snack-supported-platforms":"ios,android,web","data-snack-theme":"light","data-snack-preview":"true","data-snack-loading":"lazy"}))}m.isMDXComponent=!0}}]);